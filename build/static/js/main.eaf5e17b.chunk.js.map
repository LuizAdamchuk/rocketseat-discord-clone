{"version":3,"sources":["assets/logo.svg","styles/GlobalStyle.ts","components/Layout/style.ts","components/ServerList/style.ts","components/ServerButton/style.ts","components/ServerButton/index.tsx","components/ServerList/index.tsx","components/ServerName/style.ts","components/ServerName/index.tsx","components/ChannelInfo/style.ts","components/ChannelInfo/index.tsx","components/ChannelList/style.ts","components/ChannelButton/style.ts","components/ChannelButton/index.tsx","components/ChannelList/index.tsx","components/UserInfo/style.ts","components/UserInfo/index.tsx","components/UserList/style.ts","components/UserList/index.tsx","components/ChannelData/style.ts","components/ChannelMessage/style.ts","components/ChannelMessage/index.tsx","components/ChannelData/index.tsx","components/Layout/index.tsx","App.tsx","index.tsx"],"names":["module","exports","GlobalStyle","createGlobalStyle","Grid","styled","div","Container","Separator","Button","button","props","isHome","hasNotification","mentions","ServerButton","selected","src","logo","alt","ServerList","Title","ExpandIcon","ExpandMore","ServerName","HashtagIcon","Hashtag","Description","span","ChannelInfo","Category","AddCategoryIcon","Add","InviteIcon","PersonAdd","SettingsIcon","Settings","ChannelButton","channelName","className","id","ChannelList","Profile","Avatar","UserData","Icons","MicIcon","Mic","HeadphoneIcon","Headset","SettingsIcons","UserInfo","Role","User","UserRow","nickname","isBot","UserList","Array","from","keys","map","n","Messages","InpurWrapper","Input","input","InputIcon","AlternateEmail","Message","Header","Content","Mention","ChannelMessage","author","content","date","hasMention","ChannelData","messagesRef","useRef","useState","message","setMessage","String","format","Date","setDate","messageOnBoard","setMessageOnBoard","useEffect","current","scrollTop","scrollHeight","clearRef","createRef","handleMessages","useCallback","event","currentTarget","value","console","log","handleMessageHour","ref","mess","key","Number","length","href","type","onChange","onKeyUp","keyCode","placeholder","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaf5e17b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c42ff9e3.svg\";","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n   * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n   }\n\n   html, body, #root {\n    height: 100%;\n   }\n\n   *, button, input {\n     border: 0;\n     outline: 0;\n    font-family: Roboto, sans-serif;\n\n   }\n\n   :root {\n    --primary: #36393f;\n    --secondary: #2f3136;\n    --tertiary: rgb(32,34,37);\n    --quaternary: #292b2f;\n    --quinary: #393d42;\n    --senary: #828386;\n   \n    --white: #fff;\n    --gray: #8a8c90;\n    --chat-input: rgb(64,68,75);\n    --symbol: #74777a;\n \n    --notification: #f84a4b;\n    --discord: #6e86d6;\n    --mention-detail: #f9a839;\n    --mention-message: #413f3f;\n \n    --link: #5d80d6;\n \n    --rocketseat: #6633cc;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Grid = styled.div`\n  display: grid;\n  height: 100vh;\n\n  grid-template-columns: 70px 240px auto 240px;\n  grid-template-rows: 46px auto 52px;\n  grid-template-areas:\n    'SL SN CI CI'\n    'SL CL CD UL'\n    'SL UI CD UL';\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  grid-area: SL;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 11px 0;\n  max-height: 100vh;\n\n  background-color: var(--tertiary);\n\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\nexport const Separator = styled.div`\n  width: 32px;\n  border-bottom: 2px solid var(--quaternary);\n\n  margin-bottom: 8px;\n`;\n","import styled from 'styled-components';\n\nimport { Props } from '.';\n\nexport const Button = styled.button<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  border-radius: 50%;\n\n  position: relative;\n\n  cursor: pointer;\n\n  width: 48px;\n  height: 48px;\n\n  margin-bottom: 8px;\n\n  background-color: ${props =>\n    props.isHome ? 'var(--rocketseat)' : 'var(--primary)'};\n\n  > img {\n    width: 24px;\n    height: 24px;\n  }\n  transition: border-radius 0.2s, background-color 0.2s;\n\n  &::before {\n    content: '';\n    position: absolute;\n\n    display: ${props => (props.hasNotification ? 'inline' : 'none')};\n\n    width: 9px;\n    height: 9px;\n    border-radius: 50%;\n\n    left: -17px;\n    top: calc(50% - 4.5px);\n\n    background-color: var(--white);\n  }\n\n  &::after {\n  content: '${props => props.mentions && props.mentions}';\n    position: absolute;\n    \n    display: ${props =>\n      props.mentions && props.mentions > 0 ? 'inline' : 'none'};\n\n    background-color: var(--notification);\n    width: auto;\n    height: 16px;\n    padding: 0 4px;\n    border-radius: 12px;\n    border: 4px solid var(--quaternary);\n\n    text-align: right;\n    font-size: 13px;\n    font-weight: bold;\n    color: var(--white);\n\n    bottom: -4px;\n    right: -4px;\n  }\n\n  &.active,\n  &:hover {\n    border-radius: 16px;\n    background-color: ${props =>\n      props.isHome ? 'var(--rocketseat)' : 'var(--discord)'};\n  }\n`;\n","import React from 'react';\n\nimport { Button } from './style';\nimport logo from '../../assets/logo.svg';\n\nexport interface Props {\n  selected?: boolean;\n  isHome?: boolean;\n  hasNotification?: boolean;\n  mentions?: number;\n}\n\nexport const ServerButton: React.FC<Props> = ({\n  selected,\n  isHome,\n  hasNotification,\n  mentions,\n}) => {\n  return (\n    <Button\n      isHome={isHome}\n      hasNotification={hasNotification}\n      mentions={mentions}\n      selected={selected}\n    >\n      {isHome && <img src={logo} alt=\"logo\" />}\n    </Button>\n  );\n};\n","import React from 'react';\n\nimport { Container, Separator } from './style';\n\nimport { ServerButton } from '../ServerButton';\n\nexport const ServerList: React.FC = () => {\n  return (\n    <Container>\n      <ServerButton isHome />\n      <Separator />\n      <ServerButton />\n      <ServerButton hasNotification />\n      <ServerButton mentions={3} />\n      <ServerButton />\n      <ServerButton />\n      <ServerButton hasNotification />\n      <ServerButton />\n      <ServerButton />\n      <ServerButton />\n      <ServerButton mentions={7} />\n      <ServerButton />\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { ExpandMore } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 11px 0 16px;\n\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\n  z-index: 2;\n\n  background-color: var(--secondary);\n`;\n\nexport const Title = styled.div`\n  font-weight: bold;\n  color: var(--white);\n`;\n\nexport const ExpandIcon = styled(ExpandMore)`\n  width: 28px;\n  height: 28px;\n  color: var(--white);\n`;\n","import React from 'react';\n\nimport { Container, Title, ExpandIcon } from './style';\n\nexport const ServerName: React.FC = () => {\n  return (\n    <Container>\n      <Title>Servidor Luiz Adamchuk</Title>\n      <ExpandIcon />\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { Hashtag } from 'styled-icons/heroicons-outline';\n\nexport const Container = styled.div`\n  grid-area: CI;\n  background-color: var(--primary);\n\n  display: flex;\n  align-items: center;\n  padding: 0 17px;\n\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\n  z-index: 2;\n`;\nexport const HashtagIcon = styled(Hashtag)`\n  width: 28px;\n  height: 28px;\n\n  color: var(--symbol);\n`;\nexport const Title = styled.div`\n  margin-left: 9px;\n\n  font-size: 16px;\n  font-weight: bold;\n\n  color: var(--white);\n`;\nexport const Separator = styled.div`\n  height: 24px;\n  width: 1px;\n\n  background-color: var(--white);\n\n  opacity: 0.2;\n  margin: 0 13px;\n`;\nexport const Description = styled.span`\n  font-size: 15px;\n  color: var(--gray);\n`;\n","import React from 'react';\n\nimport { Container, HashtagIcon, Title, Separator, Description } from './style';\n\nexport const ChannelInfo: React.FC = () => {\n  return (\n    <Container>\n      <HashtagIcon />\n\n      <Title>chat- livre</Title>\n\n      <Separator />\n\n      <Description>Canal aberto para conversas</Description>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { Add } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  grid-area: CL;\n\n  display: flex;\n  flex-direction: column;\n  padding: 24px 9.5px 0 16px;\n  background-color: var(--secondary);\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const Category = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 6px;\n\n  > span {\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 500;\n    color: var(--gray);\n  }\n`;\nexport const AddCategoryIcon = styled(Add)`\n  width: 21px;\n  height: 21px;\n\n  color: var(--symbol);\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nimport { Hashtag } from 'styled-icons/heroicons-outline';\nimport { PersonAdd, Settings } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 5px 3px;\n  border-radius: 5px;\n\n  background-color: transparent;\n  transition: background-color 0.2s;\n\n  cursor: pointer;\n\n  > div {\n    display: flex;\n    align-items: center;\n  }\n  > div span {\n    font-size: 15px;\n    color: var(--senary);\n  }\n\n  &:hover,\n  &.active {\n    background-color: var(--quinary);\n    > div span {\n      color: var(--white);\n    }\n    div#rightSide {\n      display: inline;\n    }\n  }\n\n  div#rightSide {\n    display: none;\n  }\n`;\n\nexport const HashtagIcon = styled(Hashtag)`\n  width: 20px;\n  height: 20px;\n\n  color: var(--symbol);\n`;\nexport const InviteIcon = styled(PersonAdd)`\n  width: 16px;\n  height: 16px;\n\n  cursor: pointer;\n  color: var(--symbol);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: var(--white);\n  }\n`;\nexport const SettingsIcon = styled(Settings)`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n\n  color: var(--symbol);\n\n  cursor: pointer;\n  color: var(--symbol);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: var(--white);\n  }\n`;\n","import React from 'react';\n\nimport { Container, HashtagIcon, InviteIcon, SettingsIcon } from './style';\n\ninterface Props {\n  channelName: string;\n  selected?: boolean;\n}\n\nexport const ChannelButton: React.FC<Props> = ({ channelName, selected }) => {\n  return (\n    <Container className={selected ? 'active' : ''}>\n      <div>\n        <HashtagIcon />\n        <span>{channelName}</span>\n      </div>\n      <div id=\"rightSide\">\n        <InviteIcon />\n        <SettingsIcon />\n      </div>\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport { Container, Category, AddCategoryIcon } from './style';\nimport { ChannelButton } from '../ChannelButton';\n\nexport const ChannelList: React.FC = () => {\n  return (\n    <Container>\n      <Category>\n        <span>Canais de texto</span>\n        <AddCategoryIcon />\n      </Category>\n      <ChannelButton channelName=\"chat-livre\" />\n      <ChannelButton channelName=\"trabalho\" />\n      <ChannelButton channelName=\"corrida\" />\n      <ChannelButton channelName=\"programação\" />\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nimport { Mic, Headset, Settings } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  grid-area: UI;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  background-color: var(--quaternary);\n\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\n`;\n\nexport const Profile = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const Avatar = styled.div`\n  background-color: var(--gray);\n\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n\n  opacity: 0.8;\n`;\nexport const UserData = styled.div`\n  display: flex;\n  margin-left: 8px;\n  flex-direction: column;\n\n  > strong {\n    font-size: 13px;\n    color: var(--white);\n    display: block;\n  }\n  > span {\n    color: var(--gray);\n    font-size: 13px;\n  }\n`;\nexport const Icons = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  svg + svg {\n    margin-left: 4px;\n  }\n`;\nexport const MicIcon = styled(Mic)`\n  height: 20px;\n  width: 20px;\n\n  cursor: pointer;\n\n  color: var(--white);\n  opacity: 0.3;\n  transition: 0.2s;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const HeadphoneIcon = styled(Headset)`\n  height: 20px;\n  width: 20px;\n\n  cursor: pointer;\n\n  color: var(--white);\n  opacity: 0.3;\n  transition: 0.2s;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const SettingsIcons = styled(Settings)`\n  height: 20px;\n  width: 20px;\n\n  cursor: pointer;\n\n  color: var(--white);\n  opacity: 0.3;\n  transition: 0.2s;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import React from 'react';\n\nimport {\n  Container,\n  Profile,\n  Avatar,\n  UserData,\n  Icons,\n  MicIcon,\n  HeadphoneIcon,\n  SettingsIcons,\n} from './style';\n\nexport const UserInfo: React.FC = () => {\n  return (\n    <Container>\n      <Profile>\n        <Avatar />\n        <UserData>\n          <strong>Luiz Adamchuk</strong>\n          <span>#1974</span>\n        </UserData>\n      </Profile>\n\n      <Icons>\n        <MicIcon />\n        <HeadphoneIcon />\n        <SettingsIcons />\n      </Icons>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  grid-area: UL;\n  background-color: var(--secondary);\n\n  display: flex;\n  flex-direction: column;\n  padding: 3px 6px 0 16px;\n\n  max-height: calc(100vh - 46px);\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 4px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--tertiary);\n    border-radius: 4px;\n  }\n  ::-webkit-scrollbar-track {\n    background-color: var(--secondary);\n  }\n`;\n\nexport const Role = styled.span`\n  margin-top: 20px;\n  text-transform: uppercase;\n\n  font-size: 12px;\n  font-weight: 500;\n  color: var(--gray);\n`;\nexport const User = styled.div`\n  display: flex;\n  margin-top: 4px;\n  padding: 4px;\n  border-radius: 4px;\n  align-items: center;\n\n  cursor: pointer;\n\n  background: transparent;\n  transition: 0.2s;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.2);\n  }\n\n  > strong {\n    margin-left: 16px;\n    font-weight: 500;\n    color: var(--white);\n    opacity: 0.7;\n\n    /* método sensacional para manter o texto organizado */\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n  > span {\n    margin-left: 8px;\n\n    background-color: var(--discord);\n    color: var(--white);\n    border-radius: 4px;\n    padding: 4px 6px;\n\n    text-transform: uppercase;\n    font-weight: 700;\n    font-size: 11px;\n  }\n`;\nexport const Avatar = styled.div`\n  /* evita que o avatar fique esmagado, mantem sempre a forma */\n  flex-shrink: 0;\n\n  height: 32px;\n  width: 32px;\n\n  border-radius: 50%;\n\n  background-color: var(--primary);\n\n  &.bot {\n    background-color: var(--mention-detail);\n  }\n`;\n","import React from 'react';\n\nimport { Container, Role, User, Avatar } from './style';\n\ninterface UserProps {\n  nickname: string;\n  isBot?: boolean;\n}\n\nconst UserRow: React.FC<UserProps> = ({ nickname, isBot }) => {\n  return (\n    <User>\n      <Avatar className={isBot ? 'bot' : ''} />\n      <strong>{nickname}</strong>\n      {isBot && <span>Bot</span>}\n    </User>\n  );\n};\n\nexport const UserList: React.FC = () => {\n  return (\n    <Container>\n      <Role>Disponível - 1</Role>\n      <UserRow nickname=\"Visitante\" />\n\n      <Role>Offline - 17</Role>\n      <UserRow nickname=\"Luiz Adamchuk\" isBot />\n\n      {Array.from(Array(16).keys()).map(n => (\n        <UserRow nickname=\"Fulano\" />\n      ))}\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nimport { AlternateEmail } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  grid-area: CD;\n  background-color: var(--primary);\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const Messages = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: 20px 0;\n\n  /* aqui ele vai colocar altura maxima 100vh menos 46 barra de cima e 68 barra de baixo */\n  max-height: calc(100vh - 46px - 68px);\n\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--tertiary);\n    border-radius: 4px;\n  }\n  ::-webkit-scrollbar-track {\n    background-color: var(--secondary);\n  }\n`;\nexport const InpurWrapper = styled.div`\n  width: 100%;\n  padding: 0 16px;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  height: 48px;\n  background-color: var(--chat-input);\n\n  padding: 0 8px 0 56px;\n  border-radius: 8px;\n\n  color: var(--white);\n\n  position: relative;\n\n  &::placeholder {\n    color: var(--gray);\n    font-size: 15px;\n  }\n\n  ~ svg {\n    position: relative;\n    top: -50%;\n    left: 14px;\n    transition: 180ms ease-in-out;\n  }\n`;\nexport const InputIcon = styled(AlternateEmail)`\n  height: 24px;\n  width: 24px;\n\n  color: var(--gray);\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  padding: 4px 16px;\n\n  background-color: transparent;\n\n  &.mention {\n    background-color: var(--mention-message);\n\n    border-left: 2px solid var(--mention-detail);\n\n    padding-left: 14px;\n  }\n\n  & + div {\n    margin-top: 8px;\n  }\n`;\n\nexport const Avatar = styled.div`\n  flex-shrink: 0;\n\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n\n  background-color: var(--secondary);\n\n  &.bot {\n    background-color: var(--mention-detail);\n  }\n`;\nexport const Message = styled.div`\n  min-height: 40px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  margin-left: 16px;\n`;\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n\n  > strong {\n    color: var(--white);\n    font-size: 16px;\n  }\n  > span {\n    margin-left: 8px;\n\n    background-color: var(--discord);\n    color: var(--white);\n    border-radius: 4px;\n    padding: 4px 6px;\n\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 11px;\n  }\n  > time {\n    margin-left: 6px;\n    color: var(--gray);\n    font-size: 13px;\n  }\n`;\nexport const Content = styled.div`\n  text-align: left;\n  font-size: 16px;\n  color: var(--white);\n  opacity: 0.6;\n\n  > a {\n    text-decoration: none;\n    font-size: 16px;\n    color: #ff9000;\n  }\n`;\n\nexport const Mention = styled.span`\n  color: var(--link);\n\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import React from 'react';\n\nimport { Container, Avatar, Message, Header, Content } from './style';\n\nexport { Mention } from './style';\n\nexport interface Props {\n  author: string;\n  date: string;\n  content: string | React.ReactElement | React.ReactNode;\n  hasMention?: boolean;\n  isBot?: boolean;\n}\n\nexport const ChannelMessage: React.FC<Props> = ({\n  author,\n  content,\n  date,\n  hasMention,\n  isBot,\n}) => {\n  return (\n    <Container className={hasMention ? 'mention' : ''}>\n      <Avatar className={isBot ? 'bot' : ''} />\n      <Message>\n        <Header>\n          <strong>{author}</strong>\n          {isBot && <span>Bot</span>}\n          <time>{date}</time>\n        </Header>\n        <Content>{content}</Content>\n      </Message>\n    </Container>\n  );\n};\n","import React, {\n  useRef,\n  useEffect,\n  useState,\n  useCallback,\n  ChangeEvent,\n  KeyboardEvent,\n  createRef,\n} from 'react';\nimport { format } from 'date-fns';\n\nimport { Container, Messages, InpurWrapper, Input, InputIcon } from './style';\n\nimport { ChannelMessage, Mention } from '../ChannelMessage';\n\ninterface MessageProps {\n  message: string;\n  date: string;\n  length?: number;\n}\n\nexport const ChannelData = () => {\n  const messagesRef = useRef() as React.MutableRefObject<HTMLDivElement>;\n  const [message, setMessage] = useState('');\n  const [date, setDate] = useState(\n    String(format(new Date(), \"dd'/'MM'/'yyyy\")),\n  );\n  const [messageOnBoard, setMessageOnBoard] = useState<MessageProps[]>([]);\n\n  useEffect(() => {\n    const div = messagesRef.current;\n\n    if (div) {\n      div.scrollTop = div.scrollHeight;\n    }\n  }, [messagesRef]);\n\n  const clearRef = createRef<HTMLInputElement>();\n\n  const handleMessages = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      setMessage(event.currentTarget.value);\n      console.log(message);\n    },\n    [message],\n  );\n  const handleMessageHour = useCallback(\n    (event: number) => {\n      if (clearRef.current) {\n        if (event === 13 && !!clearRef.current.value) {\n          setDate(format(new Date(), \"dd'/'MM'/'yyyy\"));\n          setMessageOnBoard([...messageOnBoard, { message, date }]);\n          setMessage('');\n\n          clearRef.current.value = '';\n        }\n      }\n    },\n    [clearRef, date, message, messageOnBoard],\n  );\n\n  return (\n    <Container>\n      <Messages ref={messagesRef}>\n        {messageOnBoard.map(mess => (\n          <ChannelMessage\n            key={Number(mess.length)}\n            author=\"Visitante\"\n            date={mess.date}\n            content={mess.message}\n          />\n        ))}\n\n        <ChannelMessage\n          author=\"Luiz Adamchuk\"\n          date={format(new Date(), \"dd'/'MM'/'yyyy\")}\n          content={\n            <>\n              Olá <Mention>@Visitante</Mention>, faça um teste você mesmo!!\n              Escreva abaixo... E para saber mais entre no repositório do{' '}\n              <a href=\"https://github.com/LuizAdamchuk/rocketseat-discord-clone\">\n                Github\n              </a>\n              .\n            </>\n          }\n          isBot\n          hasMention\n        />\n      </Messages>\n\n      <InpurWrapper>\n        <Input\n          ref={clearRef}\n          type=\"text\"\n          onChange={(event: ChangeEvent<HTMLInputElement>) =>\n            handleMessages(event)\n          }\n          onKeyUp={(event: KeyboardEvent) => handleMessageHour(event.keyCode)}\n          placeholder=\"Conversar em #chat-livre\"\n        />\n        <InputIcon />\n      </InpurWrapper>\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport { Grid } from './style';\nimport { ServerList } from '../ServerList';\nimport { ServerName } from '../ServerName';\nimport { ChannelInfo } from '../ChannelInfo';\nimport { ChannelList } from '../ChannelList';\nimport { UserInfo } from '../UserInfo';\nimport { UserList } from '../UserList';\nimport { ChannelData } from '../ChannelData';\n\nexport const Layout: React.FC = () => {\n  return (\n    <Grid>\n      <ServerList />\n      <ServerName />\n      <ChannelInfo />\n      <ChannelList />\n      <UserInfo />\n      <UserList />\n      <ChannelData />\n    </Grid>\n  );\n};\n","import React from 'react';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport { Layout } from './components/Layout';\n\nfunction App() {\n  return (\n    <>\n      <Layout />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}